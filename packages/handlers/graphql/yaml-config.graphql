extend type Handler {
  """
  Handler for remote/local/third-party GraphQL schema
  """
  graphql: GraphQLHandler
}

type GraphQLHandler @md {
  """
  A url to your remote GraphQL endpoint
  """
  endpoint: String!
  """
  JSON object representing the Headers to add to the runtime of the API calls only for schema introspection
  """
  schemaHeaders: JSON
  """
  JSON object representing the Headers to add to the runtime of the API calls only for operation during runtime
  """
  operationHeaders: JSON
  """
  Use HTTP GET for Query operations
  """
  useGETForQueries: Boolean
  """
  HTTP method used for GraphQL operations
  """
  method: GraphQLHandlerHTTPMethod
  """
  Enable GraphQL Subscriptions using WebSocket
  """
  enableSubscriptions: Boolean
  """
  Path to a custom W3 Compatible Fetch Implementation
  """
  customFetch: Any
  """
  Path to a custom W3 Compatible WebSocket Implementation
  """
  webSocketImpl: String
  """
  Paths to the schema
  """
  schema: [String]
  """
  Path to the introspection
  You can seperately give schema introspection
  """
  introspection: String
  """
  Cache Introspection
  """
  cacheIntrospection: GraphQLCacheIntrospectionConfig
}

union GraphQLCacheIntrospectionConfig = GraphQLIntrospectionCachingOptions | Boolean

type GraphQLIntrospectionCachingOptions {
  """
  Time to live of introspection cache
  """
  ttl: Int
}

enum GraphQLHandlerHTTPMethod {
  GET
  POST
}
